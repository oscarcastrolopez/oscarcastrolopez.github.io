theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"),
legend.position = "bottom",
legend.title = element_text(size = 14),
legend.text = element_text(size = 13),
legend.key.width = unit(1.5,"cm"))+
guides(colour = guide_legend(override.aes = list(size=2)))
}
##Line plot of new_deaths with date breaks by short month and day
plot.trend.new_deaths.monthdays <- function(startdate, enddate, countries, graphtitle, graphsubtitle){
tmp.df <- covid.df[covid.df$location %in% countries,]
tmp.df <- tmp.df[tmp.df$date >= startdate,]
tmp.df <- tmp.df[tmp.df$date <= enddate,]
ggplot(data=tmp.df , aes(x=date, y=new_deaths, group=location, colour=location)) +
geom_line(size=1) +
scale_color_discrete(name = "Países")+
scale_x_date(date_breaks = "day", date_labels = "%b %d")+
ggtitle(graphtitle,
subtitle = graphsubtitle)+
labs(caption = plotscaption)+
ylab("Nuevos casos de COVID-19")+
xlab("Fecha")+
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"),
legend.position = "bottom",
legend.title = element_text(size = 14),
legend.text = element_text(size = 13),
legend.key.width = unit(1.5,"cm"))+
guides(colour = guide_legend(override.aes = list(size=2)))
}
top5.total_cases <- c(head(as.character(top20.total_cases$location),5), "Mexico")
sublabel.tmp <- paste("Rango:", format(startdate, "%d/%m/%Y"),"-", format(enddate, "%d/%m/%Y"))
title.tmp <- "Tendencia de nuevas muertes por Covid-19"
plot.trend.new_deaths.month(startdate, enddate, top5.total_cases, title.tmp, sublabel.tmp)
##Line plot of new_total_cases with date breaks by month
plot.trend.total_cases.month <- function(startdate, enddate, countries, graphtitle, graphsubtitle){
tmp.df <- covid.df[covid.df$location %in% countries,]
tmp.df <- tmp.df[tmp.df$date >= startdate,]
tmp.df <- tmp.df[tmp.df$date <= enddate,]
ggplot(data=tmp.df , aes(x=date, y=total_cases, group=location, colour=location)) +
geom_line(size=1) +
scale_color_discrete(name = "Países")+
scale_x_date(date_breaks = "month", date_labels = "%B")+
ggtitle(graphtitle,
subtitle = graphsubtitle)+
labs(caption = plotscaption)+
ylab("Casos acumulados de COVID-19")+
xlab("Fecha")+
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"),
legend.position = "bottom",
legend.title = element_text(size = 14),
legend.text = element_text(size = 13),
legend.key.width = unit(1.5,"cm"))+
guides(colour = guide_legend(override.aes = list(size=2)))
}
##Line plot of new_deaths with date breaks by short month and day
plot.trend.total_cases.monthdays <- function(startdate, enddate, countries, graphtitle, graphsubtitle){
tmp.df <- covid.df[covid.df$location %in% countries,]
tmp.df <- tmp.df[tmp.df$date >= startdate,]
tmp.df <- tmp.df[tmp.df$date <= enddate,]
ggplot(data=tmp.df , aes(x=date, y=total_cases, group=location, colour=location)) +
geom_line(size=1) +
scale_color_discrete(name = "Países")+
scale_x_date(date_breaks = "day", date_labels = "%b %d")+
ggtitle(graphtitle,
subtitle = graphsubtitle)+
labs(caption = plotscaption)+
ylab("Casos acumulados de COVID-19")+
xlab("Fecha")+
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"),
legend.position = "bottom",
legend.title = element_text(size = 14),
legend.text = element_text(size = 13),
legend.key.width = unit(1.5,"cm"))+
guides(colour = guide_legend(override.aes = list(size=2)))
}
sublabel.tmp <- paste("Rango:", format(startdate, "%d/%m/%Y"),"-", format(enddate, "%d/%m/%Y"))
title.tmp <- "Contagios acumulados de Covid-19"
plot.trend.total_cases.month(startdate, enddate, top5.total_cases, title.tmp, sublabel.tmp)
# Generate total_deaths line plot with month breaks
plot.trend.total_deaths.month <- function(startdate, enddate, countries, graphtitle, subgraphtitle){
tmp.df <- covid.df[covid.df$location %in% countries,]
tmp.df <- tmp.df[tmp.df$date >= startdate,]
tmp.df <- tmp.df[tmp.df$date <= enddate,]
ggplot(data=tmp.df , aes(x=date, y=total_deaths, group=location, colour=location)) +
geom_line(size=1) +
scale_color_discrete(name = "Países")+
scale_x_date(date_breaks = "month", date_labels = "%B")+
ggtitle(graphtitle,
subtitle = subgraphtitle)+
labs(caption = plotscaption)+
ylab("Muertes totales por COVID-19")+
xlab("Fecha")+
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"),
legend.position = "bottom",
legend.title = element_text(size = 14),
legend.text = element_text(size = 13),
legend.key.width = unit(1.5,"cm"))+
guides(colour = guide_legend(override.aes = list(size=2)))
}
# Generate total_deaths line plot with month and day breaks
plot.trend.total_deaths.monthdays <- function(startdate, enddate, countries, graphtitle, subgraphtitle){
tmp.df <- covid.df[covid.df$location %in% countries,]
tmp.df <- tmp.df[tmp.df$date >= startdate,]
tmp.df <- tmp.df[tmp.df$date <= enddate,]
ggplot(data=tmp.df , aes(x=date, y=total_deaths, group=location, colour=location)) +
geom_line(size=1) +
scale_color_discrete(name = "Países")+
scale_x_date(date_breaks = "day", date_labels = "%b %d")+
ggtitle(graphtitle,
subtitle = subgraphtitle)+
labs(caption = plotscaption)+
ylab("Muertes totales por COVID-19")+
xlab("Fecha")+
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"),
legend.position = "bottom",
legend.title = element_text(size = 14),
legend.text = element_text(size = 13),
legend.key.width = unit(1.5,"cm"))+
guides(colour = guide_legend(override.aes = list(size=2)))
}
top5.total_deaths <-  head(as.character(top20.total_deaths$location),5)
sublabel.tmp <- paste("Rango:", format(startdate, "%d/%m/%Y"),"-", format(enddate, "%d/%m/%Y"))
title.tmp <- "Muertes acumuladas por Covid-19"
plot.trend.total_deaths.month(startdate, enddate, top5.total_deaths, title.tmp, sublabel.tmp)
covid.mexico <- covid.df[covid.df$location=='Mexico',]
covid.mexico <- covid.mexico[covid.mexico$date > "2020-04-01",]
covid.mexico.new <- covid.mexico[,c("date", "new_cases", "new_deaths")]
covid.mexico.new.lf <-melt(covid.mexico.new, id.vars = c("date"))
ggplot(data=covid.mexico.new.lf , aes(x=date, y=value, group=variable, colour=variable)) +
geom_line(size=1) +
scale_color_discrete(name = "Indicador", labels=c("Nuevos Contagios", "Nuevas Muertes"))+
scale_x_date(date_breaks = "week", date_labels = "%b %d")+
ggtitle("Curvas de contagios y muertes diarias por COVID-19 en México",
caption = plotscaption)+
labs(caption = plotscaption)+
ylab("")+
xlab("Fecha")+
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"),
legend.position = "bottom",
legend.title = element_text(size = 14),
legend.text = element_text(size = 13),
legend.key.width = unit(1.5,"cm"))+
guides(colour = guide_legend(override.aes = list(size=2)))
covid.mexico <- covid.df[covid.df$location=='Mexico',]
covid.mexico <- covid.mexico[covid.mexico$date > "2020-04-01",]
covid.mexico.new <- covid.mexico[,c("date", "new_cases", "new_deaths")]
covid.mexico.new.lf <-melt(covid.mexico.new, id.vars = c("date"))
ggplot(data=covid.mexico.new.lf , aes(x=date, y=value, group=variable, colour=variable)) +
geom_line(size=1) +
scale_color_discrete(name = "Indicador", labels=c("Nuevos Contagios", "Nuevas Muertes"))+
scale_x_date(date_breaks = "week", date_labels = "%b %d")+
ggtitle("Curvas de contagios y muertes diarias por COVID-19 en México")+
labs(caption = plotscaption)+
ylab("")+
xlab("Fecha")+
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"),
legend.position = "bottom",
legend.title = element_text(size = 14),
legend.text = element_text(size = 13),
legend.key.width = unit(1.5,"cm"))+
guides(colour = guide_legend(override.aes = list(size=2)))
covid.mexico.new.lastmonth <- covid.mexico.new[covid.mexico.new$date >= enddate-30, ]
covid.mexico.new.lastmonth.lf <- melt(covid.mexico.new.lastmonth, id.vars = c("date"))
ggplot(data=covid.mexico.new.lastmonth.lf , aes(x=date, y=value, group=variable, colour=variable)) +
geom_line(size=1) +
scale_color_discrete(name = "Indicador", labels=c("Nuevos Contagios", "Nuevas Muertes"))+
scale_x_date(date_breaks = "week", date_labels = "%b %d")+
ggtitle("Curvas de contagios y muertes diarias por COVID-19 en México - Último mes")+
labs(caption = plotscaption)+
ylab("")+
xlab("Fecha")+
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"),
legend.position = "bottom",
legend.title = element_text(size = 14),
legend.text = element_text(size = 13),
legend.key.width = unit(1.5,"cm"))+
guides(colour = guide_legend(override.aes = list(size=2)))
covid.mexico.total <- covid.mexico[,c("date", "total_cases", "total_deaths")]
covid.mexico.total.lf <-melt(covid.mexico.total, id.vars = c("date"))
ggplot(data=covid.mexico.total.lf , aes(x=date, y=value, group=variable, colour=variable)) +
geom_line(size=1) +
scale_color_discrete(name = "Indicador", labels=c("Nuevos Contagios", "Nuevas Muertes"))+
scale_x_date(date_breaks = "week", date_labels = "%b %d")+
scale_y_continuous(breaks=c(50000, 100000, 200000, 300000, 400000, 500000, 750000),
label=c("50k","100k", "200k", "300k", "400k", "500k", "750k"))+
ggtitle("Curvas de contagios y muertes acumulados por COVID-19 en México")+
labs(caption = plotscaption)+
ylab("")+
xlab("Fecha")+
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"),
legend.position = "bottom",
legend.title = element_text(size = 14),
legend.text = element_text(size = 13),
legend.key.width = unit(1.5,"cm"))+
guides(colour = guide_legend(override.aes = list(size=2)))
covid.mexico.total.lasttmonth <- covid.mexico.total[covid.mexico.total$date >= enddate-30, ]
covid.mexico.total.lasttmonth.lf <- melt(covid.mexico.total.lasttmonth, id.vars = c("date"))
ggplot(data=covid.mexico.total.lasttmonth.lf , aes(x=date, y=value, group=variable, colour=variable)) +
geom_line(size=1) +
scale_color_discrete(name = "Indicador", labels=c("Nuevos Contagios", "Nuevas Muertes"))+
scale_x_date(date_breaks = "week", date_labels = "%b %d")+
scale_y_continuous(breaks=c(50000, 100000, 200000, 300000, 400000, 500000, 750000),
label=c("50k","100k", "200k", "300k", "400k", "500k", "750k"))+
ggtitle("Curvas de contagios y muertes acumulados por COVID-19 en México - Último mes",
caption = plotscaption)+
ylab("")+
xlab("Fecha")+
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"),
legend.position = "bottom",
legend.title = element_text(size = 14),
legend.text = element_text(size = 13),
legend.key.width = unit(1.5,"cm"))+
guides(colour = guide_legend(override.aes = list(size=2)))
ggplot(data=covid.mexico.total.lasttmonth.lf , aes(x=date, y=value, group=variable, colour=variable)) +
geom_line(size=1) +
scale_color_discrete(name = "Indicador", labels=c("Nuevos Contagios", "Nuevas Muertes"))+
scale_x_date(date_breaks = "week", date_labels = "%b %d")+
scale_y_continuous(breaks=c(50000, 100000, 200000, 300000, 400000, 500000, 750000),
label=c("50k","100k", "200k", "300k", "400k", "500k", "750k"))+
ggtitle("Curvas de contagios y muertes acumulados por COVID-19 en México - Último mes")+
labs(caption = plotscaption)+
ylab("")+
xlab("Fecha")+
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"),
legend.position = "bottom",
legend.title = element_text(size = 14),
legend.text = element_text(size = 13),
legend.key.width = unit(1.5,"cm"))+
guides(colour = guide_legend(override.aes = list(size=2)))
covid.mexico <- covid.df[covid.df$location=='Mexico',]
week.agg <- covid.mexico %>%
group_by(week = week(date)) %>%
summarise(mean_new_cases = mean(new_cases),
n = n(),
loCI_new_cases = ci(new_cases)[2],
hiCI_new_cases = ci(new_cases)[3],
mean_new_deaths = mean(new_deaths),
loCI_new_deaths = ci(new_deaths)[2],
hiCI_new_deaths = ci(new_deaths)[3],
total_new_cases = sum(new_cases),
total_new_deaths = sum(new_deaths))
# Weeks with zero mean new cases are deleted
week.agg <- week.agg[which(week.agg$mean_new_cases > 0),]
# Finding the date of the first week to be ploted
firstweek <- min(week.agg$week)
rowindex <- match(firstweek, week(covid.mexico[,"date"]))
firstweek.date <- format(covid.mexico[rowindex, ]$date, "%d/%m/%Y")
rm(firstweek, rowindex)
# Finding the date of the last week to be ploted
lastweek <- max(week.agg$week)
rowindex <- match(lastweek, week(covid.mexico[,"date"]))
lastweek.date <- format(covid.mexico[rowindex, ]$date, "%d/%m/%Y")
rm(lastweek, rowindex)
sublabel <- paste("Rango:", firstweek.date, "-", lastweek.date)
ggplot(data=week.agg, aes(x=as.character(week),y=mean_new_cases))+
geom_bar(stat = 'identity', aes(fill = mean_new_cases)) +
geom_errorbar(aes(ymin=loCI_new_cases, ymax=hiCI_new_cases), width=.2,
position=position_dodge(.9)) +
xlab("Semana")+
ylab("Promedio semanal de casos ± IC 95%")+
labs(title="Promedio semanal de casos de COVID-19 en México",
subtitle = sublabel,
caption = plotscaption)+
scale_fill_gradient(name="Casos", low = "green", high = "red")+
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"))
ggplot(data=week.agg, aes(x=as.character(week),y=mean_new_deaths))+
geom_bar(stat = 'identity', aes(fill = mean_new_deaths)) +
geom_errorbar(aes(ymin=loCI_new_deaths, ymax=hiCI_new_deaths), width=.2,
position=position_dodge(.9)) +
xlab("Semana")+
ylab("Promedio semanal de muertes ± IC 95%")+
labs(title="Promedio semanal de muertes por COVID-19 en México",
subtitle = sublabel,
caption = plotscaption)+
scale_fill_gradient(name="Muertes", low = "green", high = "red")+
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"))
ggplot(data=week.agg, aes(x=as.character(week),y=total_new_cases))+
geom_bar(stat = 'identity', aes(fill = total_new_cases)) +
xlab("Semana")+
ylab("Casos totales por semana")+
labs(title="Casos totales de COVID-19 por semana en México",
subtitle = sublabel,
caption = plotscaption)+
scale_fill_gradient(name="Casos totales", low = "green", high = "red")+
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"))
ggplot(data=week.agg, aes(x=as.character(week),y=total_new_deaths))+
geom_bar(stat = 'identity', aes(fill = total_new_deaths)) +
xlab("Semana")+
ylab("Muertes totales por semana")+
labs(title="Muertes totales por COVID-19 por semana en México",
subtitle=sublabel,
caption = plotscaption)+
scale_fill_gradient(name="Muertes totales", low = "green", high = "red")+
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"))
Sys.date()
sys.date()
Sys.Date()
date()
?library
?str
knitr::opts_chunk$set(echo = TRUE)
knitr::knit_hooks$set(wrap = function(before, options, envir){
if (before){
paste0('<', options$wrap, '>')
} else {
paste0('</', options$wrap, '>')
}
})
startdate <- min(covid.df$date)
htmltools::includeHTML("modal.html")
knitr::opts_chunk$set(echo = TRUE)
knitr::knit_hooks$set(wrap = function(before, options, envir){
if (before){
paste0('<', options$wrap, '>')
} else {
paste0('</', options$wrap, '>')
}
})
covid.df <- read.csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
library(ggplot2)
library(knitr)
library(reshape2)
library(kableExtra)
#library(dplyr)
library(tidyverse)
library(lubridate)
library(gmodels)
plotscaption <- "oscarcastrolopez.github.io"
str(covid.df)
covid.df$date <- as.Date(covid.df$date, format("%Y-%m-%d"))
levels(covid.df$location)
levels(covid.df$continent)
maxdays <- max(table(covid.df$location))
print(paste("Días máximos reportados:",maxdays))
names(table(covid.df$location)[table(covid.df$location)==maxdays])
curr_locale <- Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME","en_US.UTF-8")
startdate <- min(covid.df$date)
enddate <- max(covid.df$date)
todayformatted <- format(Sys.Date(), "%A, %B, %d of %Y")
todayformatted <- paste(toupper(substr(todayformatted, 1, 1)),
substr(todayformatted, 2, nchar(todayformatted)),
sep="")
print(paste("Starts: ", format(startdate, "%A, %B, %d of %Y"),
"Ends:",  format(enddate, "%A, %B, %d of %Y")))
curr_locale <- Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME","en_US.UTF-8")
curr_locale <- Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME","en_US.UTF-8")
curr_locale <- Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME","en_US.UTF-8")
startdate <- min(covid.df$date)
enddate <- max(covid.df$date)
todayformatted <- format(Sys.Date(), "%A, %B, %d of %Y")
todayformatted <- paste(toupper(substr(todayformatted, 1, 1)),
substr(todayformatted, 2, nchar(todayformatted)),
sep="")
print(paste("Starts: ", format(startdate, "%A, %B, %d of %Y"),
"Ends:",  format(enddate, "%A, %B, %d of %Y")))
startdate <- min(covid.df$date)
enddate <- max(covid.df$date)
todayformatted <- format(Sys.Date(), "%A, %B, %d of %Y")
todayformatted <- paste(toupper(substr(todayformatted, 1, 1)),
substr(todayformatted, 2, nchar(todayformatted)),
sep="")
print(paste("Starts:", format(startdate, "%A, %B, %d of %Y"),
"Ends:",  format(enddate, "%A, %B, %d of %Y")))
# Get one row of each country with the updated totals
covid.total.df <- covid.df[covid.df$date== enddate,]
# Filter countries with less than 1 millón population
covid.total.df <- covid.total.df[covid.total.df$population >= 1000000,]
covid.total.df$location <- droplevels.factor(covid.total.df$location)
print(names(covid.total.df)[c(5,7,9,11)])
?as.Date
todayformatted <- format(Sys.Date(), "%A, %B %d, %Y")
tablecolnames <- c("Position", "Country", "Total cases")
kable(top20.total_cases[,c(1,2,4)], format = "html", align = "clr",
col.names=tablecolnames, caption="Countries with most cases") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = F, position = "float_left") %>%
row_spec(mexrow, bold = T, color = "black", background = "yellow")
# Data is ordered according to the total_cases column
ranking.total_cases <- covid.total.df[order(-covid.total.df$total_cases),]
# The row corresponding to World is removed
ranking.total_cases <- ranking.total_cases[ranking.total_cases$location != "World", ]
# A new column indicating the positionin the rank is added
ranking.total_cases$position <- 1:nrow(ranking.total_cases)
# Only columns of interest are kept
columnfilter <- c("position", "location", "total_cases")
bottom20.total_cases <- tail(ranking.total_cases[, columnfilter],20)
top20.total_cases <- head(ranking.total_cases[, columnfilter],20)
rm(ranking.total_cases)
rownames(top20.total_cases) <- c()
rownames(bottom20.total_cases) <- c()
mexrow <- which(top20.total_cases$location=='Mexico')
top20.total_cases$total_cases_formated <- formatC(top20.total_cases$total_cases,
format="f", big.mark=",", digits=0)
bottom20.total_cases$total_cases_formated <- formatC(bottom20.total_cases$total_cases,
format="f", big.mark=",", digits=0)
tablecolnames <- c("Position", "Country", "Total cases")
kable(top20.total_cases[,c(1,2,4)], format = "html", align = "clr",
col.names=tablecolnames, caption="Countries with most cases") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = F, position = "float_left") %>%
row_spec(mexrow, bold = T, color = "black", background = "yellow")
kable(bottom20.total_cases[,c(1,2,4)], format = "html", align = "clr",
col.names=tablecolnames, caption="Countries with least cases") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = F, position = "right")
ggplot(data=top20.total_cases, aes(x=reorder(paste(position, location),total_cases),
y=total_cases, fill=location))+
geom_bar(stat = "identity", position=position_dodge(), colour="black", show.legend = FALSE)+
ylab("Total cases of COVID-19") +
geom_text(aes(y=max(total_cases)+170000,
label=total_cases_formated,
fontface="bold"),
color="black")+
labs(title="Top 20 countries with most cases of  COVID-19",
subtitle = todayformatted,
caption = plotscaption)+
scale_y_continuous(c(100000, 250000, 500000, 750000, 1000000, 2000000, 3000000, 4000000, 5000000),
label=c("100k", "250k", "500k", "750k", "1m", "2m", "3m", "4m", "5m"))+
coord_flip() +
xlab("Countries") +
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"))
ggplot(data=top20.total_cases, aes(x=reorder(paste(position, location),total_cases),
y=total_cases, fill=location))+
geom_bar(stat = "identity", position=position_dodge(), colour="black", show.legend = FALSE)+
ylab("Total cases of COVID-19") +
geom_text(aes(y=max(total_cases)+170000,
label=total_cases_formated,
fontface="bold"),
color="black")+
labs(title="Top 20 countries with most cases of  COVID-19",
subtitle = todayformatted,
caption = plotscaption)+
scale_y_continuous(c(100000, 250000, 500000, 750000, 1000000, 2000000, 3000000, 4000000, 5000000),
label=c("100k", "250k", "500k", "750k", "1m", "2m", "3m", "4m", "5m"))+
coord_flip() +
xlab("Countries") +
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"))
ggplot(data=top20.total_cases, aes(x=reorder(paste(position, location),total_cases),
y=total_cases, fill=location))+
geom_bar(stat = "identity", position=position_dodge(), colour="black", show.legend = FALSE)+
ylab("Total cases of COVID-19") +
geom_text(aes(y=max(total_cases)+170000,
label=total_cases_formated,
fontface="bold"),
color="black")+
labs(title="Top 20 countries with most cases of  COVID-19",
subtitle = todayformatted,
caption = plotscaption)+
scale_y_continuous(breaks=c(100000, 250000, 500000, 750000, 1000000, 2000000, 3000000, 4000000, 5000000),
label=c("100k", "250k", "500k", "750k", "1m", "2m", "3m", "4m", "5m"))+
coord_flip() +
xlab("Countries") +
theme_bw()+
theme(title = element_text(size=14, face="bold", colour = "black"),
axis.text.y = element_text(size=11, face="bold", colour = "black"),
axis.text.x = element_text(size=11, face="bold", colour = "black"))
